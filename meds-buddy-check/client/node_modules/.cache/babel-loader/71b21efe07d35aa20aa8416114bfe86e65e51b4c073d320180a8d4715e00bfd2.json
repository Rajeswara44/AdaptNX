{"ast":null,"code":"var _jsxFileName = \"G:\\\\34\\\\assignments\\\\meds-buddy-check\\\\client\\\\src\\\\components\\\\NotificationSettings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationSettings = () => {\n  _s();\n  const [emailNotifications, setEmailNotifications] = useState(false);\n  const [smsNotifications, setSmsNotifications] = useState(false);\n  const [pushNotifications, setPushNotifications] = useState(false);\n  const handleSave = e => {\n    e.preventDefault();\n    // For now, just alert the settings\n    alert('Notification settings saved (mock)');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-settings-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notification Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSave,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: emailNotifications,\n            onChange: () => setEmailNotifications(!emailNotifications)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), \"Email Notifications\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: smsNotifications,\n            onChange: () => setSmsNotifications(!smsNotifications)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), \"SMS Notifications\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: pushNotifications,\n            onChange: () => setPushNotifications(!pushNotifications)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), \"Push Notifications\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationSettings, \"t+Lwaap5zxbb5U8AQYpdJhuSiT4=\");\n_c = NotificationSettings;\nexport default NotificationSettings;\nvar _c;\n$RefreshReg$(_c, \"NotificationSettings\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NotificationSettings","_s","emailNotifications","setEmailNotifications","smsNotifications","setSmsNotifications","pushNotifications","setPushNotifications","handleSave","e","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","checked","onChange","_c","$RefreshReg$"],"sources":["G:/34/assignments/meds-buddy-check/client/src/components/NotificationSettings.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst NotificationSettings = () => {\r\n  const [emailNotifications, setEmailNotifications] = useState(false);\r\n  const [smsNotifications, setSmsNotifications] = useState(false);\r\n  const [pushNotifications, setPushNotifications] = useState(false);\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n    // For now, just alert the settings\r\n    alert('Notification settings saved (mock)');\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-settings-container\">\r\n      <h2>Notification Settings</h2>\r\n      <form onSubmit={handleSave}>\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={emailNotifications}\r\n              onChange={() => setEmailNotifications(!emailNotifications)}\r\n            />\r\n            Email Notifications\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={smsNotifications}\r\n              onChange={() => setSmsNotifications(!smsNotifications)}\r\n            />\r\n            SMS Notifications\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={pushNotifications}\r\n              onChange={() => setPushNotifications(!pushNotifications)}\r\n            />\r\n            Push Notifications\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\">Save Settings</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationSettings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}